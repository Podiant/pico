{"version":3,"sources":["../../../../assets/js/lib/classes/event-emitter.js","../../../../assets/js/lib/classes/app.js","../../../../assets/js/lib/classes/plugin.js","../../../../assets/js/lib/classes/validator.js","../../../../assets/js/lib/validation/email.js","../../../../assets/js/lib/validation/unique.js","../../../../assets/js/lib/validation/pair.js","../../../../assets/js/lib/validation/server.js","../../../../assets/js/onboarding/wizard.js","../../../../assets/js/main.js"],"names":["EventEmitter","_classCallCheck","this","__callbacks","event","callback","push","cbs","newCallbacks","i","length","args","Array","from","arguments","slice","apply","App","_ref","_this","plugins","_possibleConstructorReturn","_getPrototypeOf","call","__plugins","isArray","forEach","Plugin","plugin","_assertThisInitialized","$","window","document","ready","emit","PluginBase","app","on","ValidatorBase","value","Promise","resolve","reject","validate","then","valid","catch","err","Error","REGEX","EmailValidator","email","str","String","toLowerCase","test","UniqueValidator","basis","_this2","socket","WebSocket","concat","location","host","resolved","rejected","onclose","onmessage","e","data","JSON","parse","close","error","onopen","send","PairlValidator","checkAgainst","ServerValidator","WizardStep","wizard","dom","show","direction","hasClass","addClass","setTimeout","removeClass","hide","find","first","focus","remove","field","group","closest","feedback","appendTo","text","message","prev","next","buttons","inputs","enable","attr","not","removeAttr","waitingValidators","form","each","input","val","required","type","unique","serverSide","pairWith","trim","validateNext","pair","shift","validator","check","self","keyCode","Wizard","steps","subdom","step","submit","stepIndex","index","OnboardingWizardPlugin","Pico"],"mappings":"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","sourcesContent":["export default class EventEmitter {\n    constructor() {\n        this.__callbacks = {}\n    }\n\n    on(event, callback) {\n        if (typeof (this.__callbacks[event]) === 'undefined') {\n            this.__callbacks[event] = []\n        }\n\n        this.__callbacks[event].push(callback)\n        return this\n    }\n\n    off(event, callback) {\n        var cbs = this.__callbacks[event]\n\n        if (typeof (cbs) === 'undefined') {\n            return this\n        }\n\n        var newCallbacks = []\n\n        if (typeof (callback) !== 'undefined') {\n            for(var i = 0; i < cbs.length; i ++) {\n                if (cbs[i] !== callback) {\n                    newCallbacks.push(cbs[i])\n                }\n            }\n        }\n\n        this.__callbacks[event] = newCallbacks\n        return this\n    }\n\n    emit(event) {\n        var cbs = this.__callbacks[event]\n        var args = Array.from(arguments).slice(1)\n\n        if (typeof (cbs) !== 'undefined') {\n            for(var i = 0; i < cbs.length; i ++) {\n                cbs[i].apply(this, args)\n            }\n        }\n\n        return this\n    }\n}\n","import EventEmitter from './event-emitter'\n\nexport default class App extends EventEmitter {\n    constructor({plugins}) {\n        super()\n        this.__plugins = []\n\n        if (Array.isArray(plugins)) {\n            plugins.forEach(\n                (Plugin) => {\n                    const plugin = new Plugin(this)\n\n                    this.__plugins.push(plugin)\n                }\n            )\n        }\n\n        this.$ = window.$\n        this.$(document).ready(\n            () => {\n                this.ready()\n            }\n        )\n    }\n\n    ready() {\n        this.emit('ready')\n    }\n}\n","import EventEmitter from './event-emitter'\n\nexport default class PluginBase extends EventEmitter {\n    constructor(app) {\n        super()\n        app.on('ready', this.ready)\n    }\n\n    ready() {\n\n    }\n}\n","/* global Promise */\n\nimport EventEmitter from './event-emitter'\n\nexport default class ValidatorBase extends EventEmitter {\n    check(value) {\n        return new Promise(\n            (resolve, reject) => {\n                this.emit('validating')\n                this.validate(value).then(\n                    (valid) => {\n                        this.emit('valid')\n                        resolve(valid)\n                    }\n                ).catch(\n                    (err) => {\n                        this.emit('invalid', err)\n                        reject(err)\n                    }\n                )\n            }\n        )\n    }\n\n    validate() {\n        throw new Error('Method not implemented')\n    }\n}\n","/* global Promise */\n\nimport ValidatorBase from '../classes/validator'\n\nconst REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport default class EmailValidator extends ValidatorBase {\n    validate(email) {\n        return new Promise(\n            (resolve, reject) => {\n                const str = String(email).toLowerCase()\n\n                if (!REGEX.test(str)) {\n                    reject(new Error('This doesn\\'t look like an email address.'))\n                } else {\n                    resolve(str)\n                }\n            }\n        )\n    }\n}\n","/* global Promise */\n\nimport ValidatorBase from '../classes/validator'\n\nexport default class UniqueValidator extends ValidatorBase {\n    constructor(basis) {\n        super()\n        this.basis = basis\n    }\n\n    validate(value) {\n        return new Promise(\n            (resolve, reject) => {\n                const socket = new WebSocket(\n                    `ws://${window.location.host}/ws/unique/${this.basis}/`\n                )\n\n                let resolved = false\n                let rejected = false\n\n                socket.onclose = () => {\n                    if (!rejected && !resolved) {\n                        reject(\n                            new Error('An error occurred while communicating with the server.')\n                        )\n                    }\n                }\n\n                socket.onmessage = (e) => {\n                    const data = JSON.parse(e.data)\n\n                    if (data.valid) {\n                        if (!rejected && !resolved) {\n                            resolved = true\n                            socket.close()\n                            resolve(value)\n                        }\n                    } else if (!rejected && !resolved) {\n                        rejected = true\n                        socket.close()\n                        reject(new Error(data.error))\n                    }\n                }\n\n                socket.onopen = () => {\n                    socket.send(value)\n                }\n            }\n        )\n    }\n}\n","/* global Promise */\n\nimport ValidatorBase from '../classes/validator'\n\nexport default class PairlValidator extends ValidatorBase {\n    constructor(value) {\n        super()\n        this.checkAgainst = value\n    }\n\n    validate(value) {\n        return new Promise(\n            (resolve, reject) => {\n                if (value !== this.checkAgainst) {\n                    reject(new Error('This value doesn\\'t match the previous one.'))\n                } else {\n                    resolve(value)\n                }\n            }\n        )\n    }\n}\n","/* global Promise */\n\nimport ValidatorBase from '../classes/validator'\n\nexport default class ServerValidator extends ValidatorBase {\n    constructor(basis) {\n        super()\n        this.basis = basis\n    }\n\n    validate(value) {\n        return new Promise(\n            (resolve, reject) => {\n                const socket = new WebSocket(\n                    `ws://${window.location.host}/ws/validate/${this.basis}/`\n                )\n\n                let resolved = false\n                let rejected = false\n\n                socket.onclose = () => {\n                    if (!rejected && !resolved) {\n                        reject(\n                            new Error('An error occurred while communicating with the server.')\n                        )\n                    }\n                }\n\n                socket.onmessage = (e) => {\n                    const data = JSON.parse(e.data)\n\n                    if (data.valid) {\n                        if (!rejected && !resolved) {\n                            resolved = true\n                            socket.close()\n                            resolve(value)\n                        }\n                    } else if (!rejected && !resolved) {\n                        rejected = true\n                        socket.close()\n                        reject(new Error(data.error))\n                    }\n                }\n\n                socket.onopen = () => {\n                    socket.send(value)\n                }\n            }\n        )\n    }\n}\n","/* global Promise */\n\nimport EventEmitter from '../lib/classes/event-emitter'\nimport PluginBase from '../lib/classes/plugin'\nimport EmailValidator from '../lib/validation/email'\nimport UniqueValidator from '../lib/validation/unique'\nimport PairlValidator from '../lib/validation/pair'\nimport ServerValidator from '../lib/validation/server'\n\nclass WizardStep extends EventEmitter {\n    constructor(wizard, dom) {\n        super()\n\n        const submit = () => {\n            const buttons = dom.find('button, input[type=\"button\"]').attr('disabled', 'disabled')\n            const inputs = dom.find(':input').not(buttons).not('[disabled]')\n            const enable = () => {\n                buttons.removeAttr('disabled')\n                inputs.removeAttr('disabled')\n            }\n\n            inputs.attr('disabled', 'disabled')\n\n            this.on('moving.next', enable)\n            this.on('validation',\n                (err) => {\n                    if (err) {\n                        enable()\n                    }\n                }\n            )\n        }\n\n        this.show = (direction) => {\n            return new Promise(\n                (resolve) => {\n                    if (dom.hasClass('active')) {\n                        this.emit('shown')\n                        resolve()\n                    }\n\n                    this.emit('showing')\n\n                    if (direction) {\n                        dom.addClass('showing-' + direction)\n                    } else {\n                        dom.addClass('showing')\n                    }\n\n                    setTimeout(\n                        () => {\n                            if (direction) {\n                                dom.removeClass('showing-' + direction)\n                            } else {\n                                dom.removeClass('showing')\n                            }\n\n                            this.emit('shown')\n                            resolve()\n                        },\n                        333\n                    )\n                }\n            )\n        }\n\n        this.hide = (direction) => {\n            return new Promise(\n                (resolve) => {\n                    this.emit('hiding')\n\n                    if (direction) {\n                        dom.addClass('hiding-' + direction)\n                    } else {\n                        dom.addClass('hiding')\n                    }\n\n                    setTimeout(\n                        () => {\n                            if (direction) {\n                                dom.removeClass('hiding-' + direction)\n                            } else {\n                                dom.removeClass('hiding')\n                            }\n\n                            this.emit('hidden')\n                            resolve()\n                        },\n                        333\n                    )\n                }\n            )\n        }\n\n        this.on('showing',\n            () => {\n                dom.addClass('active')\n            }\n        )\n\n        this.on('hidden',\n            () => {\n                dom.removeClass('active')\n            }\n        )\n\n        this.on('shown',\n            () => {\n                dom.find(':input').first().focus()\n            }\n        )\n\n        this.on('validation',\n            (err) => {\n                if (typeof (err) === 'undefined') {\n                    dom.find(':input.is-invalid').removeClass('is-invalid')\n                    dom.find('.invalid-feedback').remove()\n                    return\n                }\n\n                const field = window.$(err.field)\n                const group = field.closest('.form-group')\n                let feedback = group.find('.invalid-feedback')\n\n                field.addClass('is-invalid')\n\n                if (!feedback.length) {\n                    feedback = window.$('<div>').addClass('invalid-feedback')\n                    feedback.appendTo(group)\n                }\n\n                feedback.text(err.message)\n                field.focus()\n            }\n        )\n\n        this.prev = () => {\n            this.hide('rw').then(\n                () => {\n                    this.emit('moving.prev')\n                    this.emit('prev')\n                }\n            )\n        }\n\n        this.next = () => {\n            submit()\n            this.emit('validation')\n\n            this.validate().then(\n                () => {\n                    this.emit('moving.next')\n                    this.hide('ff').then(\n                        () => {\n                            this.emit('next')\n                        }\n                    )\n                }\n            ).catch(\n                (err) => {\n                    this.emit('validation', err)\n                }\n            )\n        }\n\n        this.validate = () => {\n            return new Promise(\n                (resolve, reject) => {\n                    let rejected = false\n                    let waitingValidators = []\n                    const form = dom.closest('form')\n\n                    dom.find(':input').each(\n                        function() {\n                            if (rejected) {\n                                return false\n                            }\n\n                            const input = window.$(this)\n                            const value = input.val()\n                            const required = input.attr('required')\n                            const type = input.attr('type') || 'text'\n                            const unique = input.attr('data-unique')\n                            const serverSide = input.attr('data-validator')\n                            const pairWith = input.attr('data-pair')\n\n                            if (required && !value.trim()) {\n                                rejected = true\n                                reject(\n                                    {\n                                        field: input,\n                                        message: 'This field is required.'\n                                    }\n                                )\n\n                                return false\n                            }\n\n                            switch (type) {\n                                case 'email':\n                                    waitingValidators.push(\n                                        [\n                                            new EmailValidator(),\n                                            input\n                                        ]\n                                    )\n\n                                    break\n                            }\n\n                            if (unique) {\n                                waitingValidators.push(\n                                    [\n                                        new UniqueValidator(unique),\n                                        input\n                                    ]\n                                )\n                            }\n\n                            if (serverSide) {\n                                waitingValidators.push(\n                                    [\n                                        new ServerValidator(serverSide),\n                                        input\n                                    ]\n                                )\n                            }\n\n                            if (pairWith) {\n                                waitingValidators.push(\n                                    [\n                                        new PairlValidator(\n                                            form.find(`:input[name=\"${pairWith}\"]`).val()\n                                        ),\n                                        input\n                                    ]\n                                )\n                            }\n                        }\n                    )\n\n                    const validateNext = () => {\n                        const pair = waitingValidators.shift()\n                        const validator = pair[0]\n                        const input = pair[1]\n                        const value = input.val().trim()\n\n                        validator.check(value).then(\n                            () => {\n                                if (waitingValidators.length) {\n                                    validateNext()\n                                } else if (!rejected) {\n                                    resolve()\n                                }\n                            }\n                        ).catch(\n                            (err) => {\n                                if (!rejected) {\n                                    rejected = true\n\n                                    reject(\n                                        {\n                                            field: input,\n                                            message: err.message\n                                        }\n                                    )\n                                }\n                            }\n                        )\n                    }\n\n                    if (!waitingValidators.length) {\n                        if (!rejected) {\n                            resolve()\n                        }\n                    } else {\n                        validateNext()\n                    }\n                }\n            )\n        }\n\n        const self = this\n\n        dom.on('click', '[data-action=\"prev\"]',\n            function() {\n                self.prev()\n            }\n        )\n\n        dom.on('click', '[data-action=\"next\"]',\n            function() {\n                self.next()\n            }\n        )\n\n        dom.on('keydown', ':input',\n            function(e) {\n                if (e.keyCode === 13) {\n                    self.next()\n                }\n            }\n        )\n    }\n}\n\nclass Wizard extends EventEmitter {\n    constructor(dom) {\n        super()\n\n        const self = this\n        let steps = []\n\n        dom.find('.step').each(\n            function() {\n                const subdom = window.$(this)\n                const step = new WizardStep(self, subdom)\n\n                subdom.data('wizard-step', step)\n                steps.push(step)\n            }\n        )\n\n        steps.forEach(\n            (step, i) => {\n                if (i > 0) {\n                    step.on('moving.prev',\n                        () => {\n                            const prev = steps[i - 1]\n\n                            prev.show('rw')\n                        }\n                    )\n                }\n\n                if (i < steps.length - 1) {\n                    step.on('moving.next',\n                        () => {\n                            const next = steps[i + 1]\n\n                            next.show('ff')\n                        }\n                    )\n                } else {\n                    step.on('next',\n                        () => {\n                            this.submit()\n                        }\n                    )\n                }\n            }\n        )\n\n        this.show = (stepIndex) => {\n            if (typeof (stepIndex) === 'undefined') {\n                stepIndex = 0\n            }\n\n            dom.find('.step').each(\n                function(index) {\n                    const subdom = window.$(this)\n                    const isInvalid = subdom.find('.form-group.is-invalid').length\n\n                    if (isInvalid) {\n                        stepIndex = index\n                        return false\n                    }\n                }\n            )\n\n            steps[stepIndex].show()\n        }\n\n        this.submit = () => {\n            const form = dom.closest('form')\n\n            form.submit()\n        }\n    }\n}\n\nexport default class OnboardingWizardPlugin extends PluginBase {\n    ready() {\n        const $ = this.$\n\n        $('.onboarding.wizard').each(\n            function() {\n                const wizard = new Wizard($(this))\n\n                wizard.show()\n            }\n        )\n    }\n}\n","import App from './lib/classes/app'\nimport OnboardingWizardPlugin from './onboarding/wizard'\n\nwindow.Pico = new App(\n    {\n        plugins: [\n            OnboardingWizardPlugin\n        ]\n    }\n)\n"]}