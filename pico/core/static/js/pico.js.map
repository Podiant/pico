{"version":3,"sources":["../../../../assets/js/lib/classes/event-emitter.js","../../../../assets/js/lib/classes/app.js","../../../../assets/js/lib/classes/plugin.js","../../../../assets/js/lib/classes/validator.js","../../../../assets/js/lib/validation/email.js","../../../../assets/js/lib/validation/unique.js","../../../../assets/js/lib/validation/pair.js","../../../../assets/js/lib/validation/server.js","../../../../assets/js/plugins/wizard.js","../../../../assets/js/plugins/dropzone.js","../../../../assets/js/lib/classes/debouncer.js","../../../../assets/js/plugins/typeahead.js","../../../../assets/js/lib/classes/view.js","../../../../assets/js/views/projects/create.js","../../../../assets/js/lib/classes/database.js","../../../../assets/js/plugins/kanban.js","../../../../assets/js/views/projects/board.js","../../../../assets/js/main.js"],"names":["EventEmitter","_classCallCheck","this","__callbacks","event","callback","push","cbs","newCallbacks","i","length","args","Array","from","arguments","slice","apply","App","_ref","_this","plugins","views","_possibleConstructorReturn","_getPrototypeOf","call","__plugins","__views","isArray","forEach","Plugin","plugin","_assertThisInitialized","View","view","$","window","document","ready","body","classes","classNames","mismatch","cls","hasClass","emit","PluginBase","app","on","ValidatorBase","value","Promise","resolve","reject","validate","then","valid","catch","err","Error","REGEX","EmailValidator","email","str","String","toLowerCase","test","UniqueValidator","basis","_this2","socket","WebSocket","concat","location","host","resolved","rejected","onclose","onmessage","e","data","JSON","parse","close","error","onopen","send","PairlValidator","checkAgainst","ServerValidator","WizardStep","wizard","dom","show","direction","addClass","setTimeout","removeClass","hide","trigger","find","first","focus","remove","field","group","closest","feedback","appendTo","text","message","prev","next","buttons","inputs","enable","attr","not","removeAttr","waitingValidators","form","each","input","val","required","type","unique","serverSide","pairWith","trim","validateNext","pair","shift","validator","check","self","index","parseInt","keyCode","preventDefault","Wizard","steps","subdom","step","submit","stepIndex","WizardPlugin","Dropzone","mimeType","file","typeEx","RegExp","replace","match","originalEvent","dataTransfer","files","get","target","click","ImageDropzone","alert","reader","FileReader","onload","css","result","readAsDataURL","DropzonePlugin","Debouncer","func","tolerance","timer","bouncedArgs","unbounced","_len","_key","ListItem","attach","container","thumbnail","thumbContainer","thumbImg","span","label","select","blur","List","position","offset","selectedItem","items","item","listItem","top","outerHeight","left","width","outerWidth","append","detatch","moveUp","Math","max","moveDown","min","Typeahead","urlTemplate","dataTransformer","_this3","name","replacement","after","search","url","encodeURIComponent","getJSON","transformed","list","id","stopPropagation","Mapper","template","dollar","indexOf","substr","right","Counter","obj","Transformer","transform","idTemplate","labelTemplate","thumbnailTemplate","idMapper","labelMapper","thumbnailMapper","counter","count","TypeaheadPlugin","transformer","ta","ViewBase","CreateProjectView","nameField","appleField","Database","uri","reconnectTime","reconnectTimeout","connected","connect","method","meta","unserialised","extend","json","stringify","create","update","update_list","delete","reset","console","warn","clearTimeout","CardCreationRequest","column","accepted","cancelled","debug","cancel","info","CardBase","actions","populate","Object","keys","footer","key","action","a","icon","perform","freeze","unfreeze","TemporaryCard","settings","placeholder","Card","_CardBase2","_this4","ordering","title","confirm","destroy","move","to","newSettings","_inherits","Column","_EventEmitter3","_this5","heading","can_create_cards","addBtn","request","subsettings","card","reason","canSend","can_move_out","canReceive","can_move_in","addCard","reorder","order","redraw","orderings","cardsByOrdering","sort","Board","_EventEmitter4","_this6","columns","columnsByID","cardsByID","createCard","columnID","attributes","attrs","links","detail","sender","receiver","db","html","ids","reorderings","cards","ui","draggable","warning","is","droppable","height","sortable","loadColumns","updatedColumns","datum","values","updateCards","updateCard","deleteCard","BoardDetailView","board","accept","Pico"],"mappings":"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","sourcesContent":["export default class EventEmitter {\n    constructor() {\n        this.__callbacks = {}\n    }\n\n    on(event, callback) {\n        if (typeof (this.__callbacks[event]) === 'undefined') {\n            this.__callbacks[event] = []\n        }\n\n        this.__callbacks[event].push(callback)\n        return this\n    }\n\n    off(event, callback) {\n        var cbs = this.__callbacks[event]\n\n        if (typeof (cbs) === 'undefined') {\n            return this\n        }\n\n        var newCallbacks = []\n\n        if (typeof (callback) !== 'undefined') {\n            for(var i = 0; i < cbs.length; i ++) {\n                if (cbs[i] !== callback) {\n                    newCallbacks.push(cbs[i])\n                }\n            }\n        }\n\n        this.__callbacks[event] = newCallbacks\n        return this\n    }\n\n    emit(event) {\n        var cbs = this.__callbacks[event]\n        var args = Array.from(arguments).slice(1)\n\n        if (typeof (cbs) !== 'undefined') {\n            for(var i = 0; i < cbs.length; i ++) {\n                cbs[i].apply(this, args)\n            }\n        }\n\n        return this\n    }\n}\n","import EventEmitter from './event-emitter'\n\nexport default class App extends EventEmitter {\n    constructor({plugins, views}) {\n        super()\n        this.__plugins = []\n        this.__views = []\n\n        if (Array.isArray(plugins)) {\n            plugins.forEach(\n                (Plugin) => {\n                    const plugin = new Plugin(this)\n\n                    this.__plugins.push(plugin)\n                }\n            )\n        }\n\n        if (Array.isArray(views)) {\n            views.forEach(\n                (View) => {\n                    const view = new View(this)\n\n                    this.__views.push(view)\n                }\n            )\n        }\n\n        this.$ = window.$\n        this.$(document).ready(\n            () => {\n                this.ready()\n            }\n        )\n    }\n\n    ready() {\n        const body = this.$('body')\n\n        this.__views.forEach(\n            (view) => {\n                const classes = view.classNames()\n                let mismatch = false\n\n                classes.forEach(\n                    (cls) => {\n                        if (mismatch) {\n                            return\n                        }\n\n                        if (!body.hasClass(cls)) {\n                            mismatch = true\n                        }\n                    }\n                )\n\n                if (!mismatch) {\n                    view.ready()\n                }\n            }\n        )\n\n        this.emit('ready')\n    }\n}\n","import EventEmitter from './event-emitter'\n\nexport default class PluginBase extends EventEmitter {\n    constructor(app) {\n        super()\n        this.app = app\n        app.on('ready', this.ready)\n    }\n\n    ready() {\n\n    }\n}\n","/* global Promise */\n\nimport EventEmitter from './event-emitter'\n\nexport default class ValidatorBase extends EventEmitter {\n    check(value) {\n        return new Promise(\n            (resolve, reject) => {\n                this.emit('validating')\n                this.validate(value).then(\n                    (valid) => {\n                        this.emit('valid')\n                        resolve(valid)\n                    }\n                ).catch(\n                    (err) => {\n                        this.emit('invalid', err)\n                        reject(err)\n                    }\n                )\n            }\n        )\n    }\n\n    validate() {\n        throw new Error('Method not implemented')\n    }\n}\n","/* global Promise */\n\nimport ValidatorBase from '../classes/validator'\n\nconst REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport default class EmailValidator extends ValidatorBase {\n    validate(email) {\n        return new Promise(\n            (resolve, reject) => {\n                const str = String(email).toLowerCase()\n\n                if (!REGEX.test(str)) {\n                    reject(new Error('This doesn\\'t look like an email address.'))\n                } else {\n                    resolve(str)\n                }\n            }\n        )\n    }\n}\n","/* global Promise */\n\nimport ValidatorBase from '../classes/validator'\n\nexport default class UniqueValidator extends ValidatorBase {\n    constructor(basis) {\n        super()\n        this.basis = basis\n    }\n\n    validate(value) {\n        return new Promise(\n            (resolve, reject) => {\n                const socket = new WebSocket(\n                    `ws://${window.location.host}/ws/unique/${this.basis}/`\n                )\n\n                let resolved = false\n                let rejected = false\n\n                socket.onclose = () => {\n                    if (!rejected && !resolved) {\n                        reject(\n                            new Error('An error occurred while communicating with the server.')\n                        )\n                    }\n                }\n\n                socket.onmessage = (e) => {\n                    const data = JSON.parse(e.data)\n\n                    if (data.valid) {\n                        if (!rejected && !resolved) {\n                            resolved = true\n                            socket.close()\n                            resolve(value)\n                        }\n                    } else if (!rejected && !resolved) {\n                        rejected = true\n                        socket.close()\n                        reject(new Error(data.error))\n                    }\n                }\n\n                socket.onopen = () => {\n                    socket.send(value)\n                }\n            }\n        )\n    }\n}\n","/* global Promise */\n\nimport ValidatorBase from '../classes/validator'\n\nexport default class PairlValidator extends ValidatorBase {\n    constructor(value) {\n        super()\n        this.checkAgainst = value\n    }\n\n    validate(value) {\n        return new Promise(\n            (resolve, reject) => {\n                if (value !== this.checkAgainst) {\n                    reject(new Error('This value doesn\\'t match the previous one.'))\n                } else {\n                    resolve(value)\n                }\n            }\n        )\n    }\n}\n","/* global Promise */\n\nimport ValidatorBase from '../classes/validator'\n\nexport default class ServerValidator extends ValidatorBase {\n    constructor(basis) {\n        super()\n        this.basis = basis\n    }\n\n    validate(value) {\n        return new Promise(\n            (resolve, reject) => {\n                const socket = new WebSocket(\n                    `ws://${window.location.host}/ws/validate/${this.basis}/`\n                )\n\n                let resolved = false\n                let rejected = false\n\n                socket.onclose = () => {\n                    if (!rejected && !resolved) {\n                        reject(\n                            new Error('An error occurred while communicating with the server.')\n                        )\n                    }\n                }\n\n                socket.onmessage = (e) => {\n                    const data = JSON.parse(e.data)\n\n                    if (data.valid) {\n                        if (!rejected && !resolved) {\n                            resolved = true\n                            socket.close()\n                            resolve(value)\n                        }\n                    } else if (!rejected && !resolved) {\n                        rejected = true\n                        socket.close()\n                        reject(new Error(data.error))\n                    }\n                }\n\n                socket.onopen = () => {\n                    socket.send(value)\n                }\n            }\n        )\n    }\n}\n","/* global Promise */\n\nimport EventEmitter from '../lib/classes/event-emitter'\nimport PluginBase from '../lib/classes/plugin'\nimport EmailValidator from '../lib/validation/email'\nimport UniqueValidator from '../lib/validation/unique'\nimport PairlValidator from '../lib/validation/pair'\nimport ServerValidator from '../lib/validation/server'\n\nclass WizardStep extends EventEmitter {\n    constructor(wizard, dom) {\n        super()\n\n        const submit = () => {\n            const buttons = dom.find('button, input[type=\"button\"]').attr('disabled', 'disabled')\n            const inputs = dom.find(':input').not(buttons).not('[disabled]')\n            const enable = () => {\n                buttons.removeAttr('disabled')\n                inputs.removeAttr('disabled')\n            }\n\n            inputs.attr('disabled', 'disabled')\n\n            this.on('moving.next', enable)\n            this.on('validation',\n                (err) => {\n                    if (err) {\n                        enable()\n                    }\n                }\n            )\n        }\n\n        this.show = (direction) => {\n            return new Promise(\n                (resolve) => {\n                    if (dom.hasClass('active')) {\n                        this.emit('shown')\n                        resolve()\n                    }\n\n                    this.emit('showing')\n\n                    if (direction) {\n                        dom.addClass('showing-' + direction)\n                    } else {\n                        dom.addClass('showing')\n                    }\n\n                    setTimeout(\n                        () => {\n                            if (direction) {\n                                dom.removeClass('showing-' + direction)\n                            } else {\n                                dom.removeClass('showing')\n                            }\n\n                            this.emit('shown')\n                            resolve()\n                        },\n                        333\n                    )\n                }\n            )\n        }\n\n        this.hide = (direction) => {\n            return new Promise(\n                (resolve) => {\n                    this.emit('hiding')\n\n                    if (direction) {\n                        dom.addClass('hiding-' + direction)\n                    } else {\n                        dom.addClass('hiding')\n                    }\n\n                    setTimeout(\n                        () => {\n                            if (direction) {\n                                dom.removeClass('hiding-' + direction)\n                            } else {\n                                dom.removeClass('hiding')\n                            }\n\n                            this.emit('hidden')\n                            resolve()\n                        },\n                        333\n                    )\n                }\n            )\n        }\n\n        this.on('showing',\n            () => {\n                dom.addClass('active')\n                dom.trigger('wizard.showing')\n            }\n        )\n\n        this.on('hidden',\n            () => {\n                dom.removeClass('active')\n                dom.trigger('wizard.hidden')\n            }\n        )\n\n        this.on('shown',\n            () => {\n                dom.find(':input').first().focus()\n                dom.trigger('wizard.shown')\n            }\n        )\n\n        this.on('validation',\n            (err) => {\n                if (typeof (err) === 'undefined') {\n                    dom.find(':input.is-invalid').removeClass('is-invalid')\n                    dom.find('.invalid-feedback').remove()\n                    return\n                }\n\n                const field = window.$(err.field)\n                const group = field.closest('.form-group')\n                let feedback = group.find('.invalid-feedback')\n\n                field.addClass('is-invalid')\n\n                if (!feedback.length) {\n                    feedback = window.$('<div>').addClass('invalid-feedback')\n                    feedback.appendTo(group)\n                }\n\n                feedback.text(err.message)\n                field.focus()\n            }\n        )\n\n        this.prev = () => {\n            this.hide('rw').then(\n                () => {\n                    this.emit('moving.prev')\n                    this.emit('prev')\n                }\n            )\n        }\n\n        this.next = () => {\n            submit()\n            this.emit('validation')\n\n            this.validate().then(\n                () => {\n                    this.emit('moving.next')\n                    this.hide('ff').then(\n                        () => {\n                            this.emit('next')\n                        }\n                    )\n                }\n            ).catch(\n                (err) => {\n                    this.emit('validation', err)\n                }\n            )\n        }\n\n        this.validate = () => {\n            return new Promise(\n                (resolve, reject) => {\n                    let rejected = false\n                    let waitingValidators = []\n                    const form = dom.closest('form')\n\n                    dom.find(':input').each(\n                        function() {\n                            if (rejected) {\n                                return false\n                            }\n\n                            const input = window.$(this)\n                            const value = input.val()\n                            const required = input.attr('required')\n                            const type = input.attr('type') || 'text'\n                            const unique = input.attr('data-unique')\n                            const serverSide = input.attr('data-validator')\n                            const pairWith = input.attr('data-pair')\n\n                            if (required && !value.trim()) {\n                                rejected = true\n                                reject(\n                                    {\n                                        field: input,\n                                        message: 'This field is required.'\n                                    }\n                                )\n\n                                return false\n                            }\n\n                            switch (type) {\n                                case 'email':\n                                    waitingValidators.push(\n                                        [\n                                            new EmailValidator(),\n                                            input\n                                        ]\n                                    )\n\n                                    break\n                            }\n\n                            if (unique) {\n                                waitingValidators.push(\n                                    [\n                                        new UniqueValidator(unique),\n                                        input\n                                    ]\n                                )\n                            }\n\n                            if (serverSide) {\n                                waitingValidators.push(\n                                    [\n                                        new ServerValidator(serverSide),\n                                        input\n                                    ]\n                                )\n                            }\n\n                            if (pairWith) {\n                                waitingValidators.push(\n                                    [\n                                        new PairlValidator(\n                                            form.find(`:input[name=\"${pairWith}\"]`).val()\n                                        ),\n                                        input\n                                    ]\n                                )\n                            }\n                        }\n                    )\n\n                    const validateNext = () => {\n                        const pair = waitingValidators.shift()\n                        const validator = pair[0]\n                        const input = pair[1]\n                        const value = input.val().trim()\n\n                        validator.check(value).then(\n                            () => {\n                                if (waitingValidators.length) {\n                                    validateNext()\n                                } else if (!rejected) {\n                                    resolve()\n                                }\n                            }\n                        ).catch(\n                            (err) => {\n                                if (!rejected) {\n                                    rejected = true\n\n                                    reject(\n                                        {\n                                            field: input,\n                                            message: err.message\n                                        }\n                                    )\n                                }\n                            }\n                        )\n                    }\n\n                    if (!waitingValidators.length) {\n                        if (!rejected) {\n                            resolve()\n                        }\n                    } else {\n                        validateNext()\n                    }\n                }\n            )\n        }\n\n        const self = this\n\n        dom.on('click', '[data-action=\"prev\"]',\n            function() {\n                self.prev()\n            }\n        )\n\n        dom.on('click', '[data-skip]',\n            function() {\n                const index = parseInt(\n                    window.$(this).data('skip')\n                )\n\n                self.hide('ff')\n                self.emit('skip', index)\n            }\n        )\n\n        dom.on('click', '[data-action=\"next\"]',\n            function() {\n                self.next()\n            }\n        )\n\n        dom.on('keydown', ':input',\n            function(e) {\n                if (e.keyCode === 13) {\n                    e.preventDefault()\n                    self.next()\n                }\n            }\n        )\n    }\n}\n\nclass Wizard extends EventEmitter {\n    constructor(dom) {\n        super()\n\n        const self = this\n        let steps = []\n\n        dom.find('.step').each(\n            function() {\n                const subdom = window.$(this)\n                const step = new WizardStep(self, subdom)\n\n                subdom.data('wizard-step', step)\n                steps.push(step)\n            }\n        )\n\n        steps.forEach(\n            (step, i) => {\n                if (i > 0) {\n                    step.on('moving.prev',\n                        () => {\n                            const prev = steps[i - 1]\n\n                            prev.show('rw')\n                        }\n                    )\n                }\n\n                if (i < steps.length - 1) {\n                    step.on('moving.next',\n                        () => {\n                            const next = steps[i + 1]\n\n                            next.show('ff')\n                        }\n                    )\n                } else {\n                    step.on('next',\n                        () => {\n                            this.submit()\n                        }\n                    )\n                }\n\n                step.on('skip',\n                    (index) => {\n                        steps[index].show('ff')\n                    }\n                )\n            }\n        )\n\n        this.show = (stepIndex) => {\n            if (typeof (stepIndex) === 'undefined') {\n                stepIndex = 0\n            }\n\n            dom.find('.step').each(\n                function(index) {\n                    const subdom = window.$(this)\n                    const isInvalid = subdom.find('.form-group.is-invalid').length\n\n                    if (isInvalid) {\n                        stepIndex = index\n                        return false\n                    }\n                }\n            )\n\n            steps[stepIndex].show()\n        }\n\n        this.submit = () => {\n            const form = dom.closest('form')\n\n            form.submit()\n        }\n    }\n}\n\nexport default class WizardPlugin extends PluginBase {\n    ready() {\n        const $ = this.$\n\n        $('.wizard').each(\n            function() {\n                const wizard = new Wizard($(this))\n\n                wizard.show()\n            }\n        )\n    }\n}\n","import EventEmitter from '../lib/classes/event-emitter'\nimport PluginBase from '../lib/classes/plugin'\n\nclass Dropzone extends EventEmitter {\n    constructor(dom) {\n        super()\n\n        const input = dom.find('input[type=\"file\"]')\n        const mimeType = input.attr('accept')\n        const self = this\n        const check = (file) => {\n            if (mimeType) {\n                const typeEx = new RegExp('^' + mimeType.replace('/', '\\\\/').replace('*', '.*'))\n                const match = file.type.match(typeEx)\n\n                if (!match) {\n                    return false\n                }\n            }\n\n            return true\n        }\n\n        dom.on('dragenter',\n            (e) => {\n                e.preventDefault()\n                dom.addClass('active')\n                this.emit('drag.enter')\n            }\n        ).on('dragleave',\n            (e) => {\n                e.preventDefault()\n                dom.removeClass('active')\n                this.emit('drag.exit')\n            }\n        ).on('dragover',\n            (e) => {\n                e.preventDefault()\n                dom.addClass('active')\n                this.emit('drag.over')\n            }\n        ).on('drop',\n            (e) => {\n                e.preventDefault()\n\n                if (e.originalEvent.dataTransfer.files.length !== 1) {\n                    return\n                }\n\n                let i = 0\n\n                for (i = 0; i < e.originalEvent.dataTransfer.files.length; i ++) {\n                    if (!check(e.originalEvent.dataTransfer.files[i])) {\n                        this.emit(\n                            'error',\n                            new Error('The dragged file was not of the correct type.')\n                        )\n\n                        return\n                    }\n                }\n\n                if (e.originalEvent.dataTransfer.files) {\n                    input.get(0).files = e.originalEvent.dataTransfer.files\n                    input.trigger('change')\n                }\n            }\n        ).on('click',\n            (e) => {\n                if (e.target === input.get(0)) {\n                    return\n                }\n\n                e.preventDefault()\n                input.get(0).click()\n            }\n        )\n\n        input.on('change',\n            function() {\n                let i = 0\n\n                for (i = 0; i < this.files.length; i++) {\n                    self.emit('file', this.files[i])\n                }\n            }\n        )\n    }\n}\n\nclass ImageDropzone extends Dropzone {\n    constructor(dom) {\n        super(dom)\n\n        this.on('error',\n            () => {\n                alert('Only images are supported here.')\n            }\n        )\n\n        this.on('file',\n            (file) => {\n                const reader = new FileReader()\n\n                reader.onload = (e) => {\n                    dom.css(\n                        'background-image',\n                        `url(${e.target.result})`\n                    )\n                }\n\n                reader.readAsDataURL(file)\n            }\n        )\n    }\n}\n\nexport default class DropzonePlugin extends PluginBase {\n    ready() {\n        const $ = this.$\n\n        $('.dropzone').each(\n            function() {\n                const dom = $(this)\n\n                if (dom.hasClass('dropzone-image')) {\n                    new ImageDropzone(dom)\n                } else {\n                    new Dropzone(dom)\n                }\n            }\n        )\n    }\n}\n","const Debouncer = (func, tolerance) => {\n    if (typeof (tolerance) === 'undefined') {\n        tolerance = 333\n    }\n\n    let timer = null\n    let bouncedArgs = []\n    const unbounced = () => {\n        {\n            func.apply(func, bouncedArgs)\n            timer = null\n        }\n    }\n\n    const runner = (...args) => {\n        bouncedArgs = args\n\n        if (timer === null) {\n            timer = setTimeout(unbounced, tolerance)\n        }\n    }\n\n    return runner\n}\n\nexport default Debouncer\n","import EventEmitter from '../lib/classes/event-emitter'\nimport PluginBase from '../lib/classes/plugin'\nimport Debouncer from '../lib/classes/debouncer'\n\nclass ListItem extends EventEmitter {\n    constructor(data) {\n        super()\n\n        this.data = data\n        this.attach = (dom) => {\n            const container = window.$('<a>').addClass(\n                'typeahead-item'\n            ).addClass(\n                'list-group-item'\n            ).attr(\n                'href',\n                'javascript:;'\n            )\n\n            if (data.thumbnail) {\n                const thumbContainer = window.$('<div>').addClass(\n                    'd-flex w-100'\n                )\n\n                const thumbImg = window.$('<img>').attr(\n                    'src', data.thumbnail\n                ).attr(\n                    'height', '30'\n                ).addClass(\n                    'mr-3'\n                )\n\n                const span = window.$('<span>').text(data.label)\n\n                thumbImg.appendTo(thumbContainer)\n                span.appendTo(thumbContainer)\n                thumbContainer.appendTo(container)\n            } else {\n                container.text(data.label)\n            }\n\n            container.on('click',\n                () => {\n                    this.select()\n                }\n            )\n\n            container.appendTo(dom)\n\n            this.focus = () => {\n                container.addClass('active').addClass('list-item-active')\n                this.emit('focused')\n            }\n\n            this.blur = () => {\n                container.removeClass('active').removeClass('list-item-active')\n                this.emit('blurred')\n            }\n\n            this.select = () => {\n                container.addClass('active').addClass('list-item-active')\n                this.emit('selected')\n            }\n        }\n\n        this.focus = () => {\n            throw new Error('List item not attached to container DOM element.')\n        }\n\n        this.blur = () => {\n            throw new Error('List item not attached to container DOM element.')\n        }\n    }\n}\n\nclass List extends EventEmitter {\n    constructor(data) {\n        super()\n\n        this.attach = (dom) => {\n            const container = window.$('<div>').addClass(\n                'typeahead-container'\n            ).addClass(\n                'list-group'\n            )\n\n            const position = dom.offset()\n            let selectedItem = null\n            let items = []\n\n            data.forEach(\n                (item, index) => {\n                    const listItem = new ListItem(item)\n\n                    listItem.index = index\n                    listItem.on('focused',\n                        () => {\n                            if (selectedItem !== listItem) {\n                                if (selectedItem !== null) {\n                                    selectedItem.blur()\n                                }\n\n                                selectedItem = listItem\n                            }\n                        }\n                    )\n\n                    listItem.on('selected',\n                        () => {\n                            this.emit('selected', listItem)\n                        }\n                    )\n\n                    items.push(listItem)\n                    listItem.attach(container)\n                }\n            )\n\n            container.css(\n                {\n                    position: 'absolute',\n                    top: position.top + dom.outerHeight(true),\n                    left: position.left,\n                    width: dom.outerWidth(true)\n                }\n            )\n\n            window.$('body').append(container)\n\n            this.detatch = () => {\n                container.remove()\n            }\n\n            this.moveUp = () => {\n                let index = null\n\n                if (selectedItem !== null) {\n                    index = selectedItem.index\n                }\n\n                if (index === null) {\n                    index = data.length - 1\n                } else {\n                    index = Math.max(0, index - 1)\n                }\n\n                this.focus(index)\n            }\n\n            this.moveDown = () => {\n                let index = null\n\n                if (selectedItem !== null) {\n                    index = selectedItem.index\n                }\n\n                if (index === null) {\n                    index = 0\n                } else {\n                    index = Math.min(data.length - 1, index + 1)\n                }\n\n                this.focus(index)\n            }\n\n            this.focus = (index) => {\n                if (typeof (index) === 'undefined') {\n                    throw new Error('Expected index of item to select.')\n                }\n\n                if (typeof (items[index]) !== 'undefined') {\n                    items[index].focus()\n                } else {\n                    if (selectedItem !== null) {\n                        selectedItem.blur()\n                    }\n\n                    selectedItem = null\n                }\n            }\n\n            this.select = () => {\n                if (selectedItem !== null) {\n                    selectedItem.select()\n                }\n            }\n        }\n\n        this.detatch = () => {\n            throw new Error('List has not been attached to a DOM element.')\n        }\n    }\n}\n\nclass Typeahead extends EventEmitter {\n    constructor(input, urlTemplate, dataTransformer) {\n        super()\n\n        const name = input.attr('name')\n        const replacement = window.$('<input>').attr(\n            'name', name\n        ).attr(\n            'type', 'hidden'\n        )\n\n        input.removeAttr('name')\n        input.after(replacement)\n\n        const search = new Debouncer(\n            (value) => {\n                const url = urlTemplate.replace('%s', encodeURIComponent(value))\n\n                window.$.getJSON(url,\n                    (data) => {\n                        const transformed = dataTransformer(data)\n                        const list = new List(transformed)\n\n                        if (input.data('typeahed-list')) {\n                            input.data('typeahed-list').detatch()\n                        }\n\n                        this.on('move.up',\n                            () => {\n                                list.moveUp()\n                            }\n                        )\n\n                        this.on('move.down',\n                            () => {\n                                list.moveDown()\n                            }\n                        )\n\n                        this.on('select',\n                            () => {\n                                list.select()\n                            }\n                        )\n\n                        list.on('selected',\n                            (item) => {\n                                replacement.val(item.data.id)\n                                input.val(item.data.label)\n                                list.detatch()\n                                input.focus()\n                            }\n                        )\n\n                        list.attach(input)\n                        input.data('typeahed-list', list)\n                    }\n                )\n            },\n            900\n        )\n\n        input.on('input', () => search(input.val()))\n        input.on('keydown',\n            (e) => {\n                switch (e.keyCode) {\n                    case 40:\n                        e.preventDefault()\n                        this.emit('move.down')\n                        break\n\n                    case 38:\n                        e.preventDefault()\n                        this.emit('move.up')\n                        break\n\n                    case 13:\n                        if (!replacement.val()) {\n                            e.preventDefault()\n                            e.stopPropagation()\n                            this.emit('select')\n                        }\n\n                        break\n                }\n            }\n        )\n    }\n}\n\nconst Mapper = (template) => {\n    const dollar = template.indexOf('.$.')\n    const left = template.substr(0, dollar)\n    const right = template.substr(dollar + 3)\n\n    return (index, value) => {\n        const array = value[left]\n        const item = array[index]\n\n        if (typeof (item) === 'undefined') {\n            throw new Error('Index out of range.')\n        }\n\n        return item[right]\n    }\n}\n\nconst Counter = (template) => {\n    const dollar = template.indexOf('.$.')\n    const left = template.substr(0, dollar)\n\n    return (value) => {\n        const obj = value[left]\n\n        if (Array.isArray(obj)) {\n            return obj.length\n        }\n\n        throw new Error('Value is not an array.')\n    }\n}\n\nclass Transformer {\n    constructor(template) {\n        this.transform = (data) => {\n            const idTemplate = template.id\n            const labelTemplate = template.label\n            const thumbnailTemplate = template.thumbnail\n            const idMapper = idTemplate ? new Mapper(idTemplate) : null\n            const labelMapper = labelTemplate ? new Mapper(labelTemplate) : null\n            const thumbnailMapper = thumbnailTemplate ? new Mapper(thumbnailTemplate) : null\n            const counter = new Counter(idTemplate)\n            let count = 0\n\n            if (!idMapper) {\n                throw new Error('No template provided for returning an object ID.')\n            }\n\n            if (!labelMapper) {\n                throw new Error('No template provided for returning an object label.')\n            }\n\n            try {\n                count = counter(data)\n            } catch (err) {\n                throw new Error('Invalid data returned.')\n            }\n\n            let i = 0\n            let transformed = []\n            let map = (index) => {\n                let obj = {}\n\n                obj.id = idMapper(index, data)\n                obj.label = labelMapper(index, data)\n\n                if (thumbnailMapper) {\n                    obj.thumbnail = thumbnailMapper(index, data)\n                }\n\n                return obj\n            }\n\n            for(i = 0; i < count; i ++) {\n                transformed.push(map(i))\n            }\n\n            return transformed\n        }\n    }\n}\n\nexport default class TypeaheadPlugin extends PluginBase {\n    ready() {\n        const $ = this.$\n\n        $('input[data-typeahead-url]').each(\n            function() {\n                const input = $(this)\n                const url = input.data('typeahead-url')\n                const transformer = new Transformer(\n                    input.data('typeahead-transform')\n                )\n\n                const ta = new Typeahead(\n                    input,\n                    url,\n                    transformer.transform\n                )\n\n                input.removeAttr('data-typeahead-url')\n                input.removeAttr('data-typeahead-transform')\n\n                input.data('typeahead', ta)\n            }\n        )\n    }\n}\n","import EventEmitter from './event-emitter'\n\nexport default class ViewBase extends EventEmitter {\n    classNames() {\n        return []\n    }\n\n    constructor(app) {\n        super()\n        this.app = app\n    }\n\n    ready() {\n\n    }\n}\n","import ViewBase from '../../lib/classes/view'\n\nexport default class CreateProjectView extends ViewBase {\n    classNames() {\n        return ['projects', 'create-project']\n    }\n\n    ready() {\n        const $ = this.app.$\n        const nameField = $('input[name=\"name\"]')\n        const appleField = $('#id_apple_podcasts_id')\n        const appleStep = appleField.closest('.step')\n\n        appleStep.on('wizard.shown',\n            () => {\n                if (appleField.val()) {\n                    appleField.trigger('input')\n                }\n            }\n        )\n\n        nameField.on('change',\n            () => {\n                appleField.val(nameField.val())\n            }\n        )\n    }\n}\n","import EventEmitter from './event-emitter'\n\nexport default class Database extends EventEmitter {\n    constructor(uri, reconnectTime) {\n        let socket = null\n        let reconnectTimeout = null\n        let connected = false\n\n        super()\n        this.connect = () => {\n            socket = new WebSocket(uri)\n\n            const method = (name, data, meta) => {\n                const unserialised = {\n                    meta: window.$.extend(\n                        {\n                            method: name\n                        },\n                        meta\n                    ),\n                    data: data\n                }\n\n                const json = JSON.stringify(unserialised)\n\n                socket.send(json)\n            }\n\n            this.create = (data) => method('create', data)\n            this.update = (data) => method('update', data)\n            this.update_list = (type, data) => method('update_list', data, {type: type})\n            this.delete = (data) => method('delete', data)\n            this.list = (data) => method('list', data)\n\n            socket.onclose = () => {\n                socket = null\n                reset()\n\n                if (connected) {\n                    connected = false\n                    this.emit('disconnected')\n                }\n\n                reconnectTimeout = setTimeout(\n                    () => {\n                        reconnectTime *= 2\n                        this.connect()\n                    },\n                    reconnectTime\n                )\n\n                console.warn(\n                    `Waiting ${reconnectTime / 1000} second(s) for connection to be restored.`\n                )\n            }\n\n            socket.onmessage = (e) => {\n                const unserialised = JSON.parse(e.data)\n\n                if (unserialised.error) {\n                    console.warn(unserialised.error)\n                    return\n                }\n\n                if (!unserialised.meta) {\n                    console.warn('Missing response metadata.')\n                    return\n                }\n\n                switch (unserialised.meta.method) {\n                    case 'list':\n                        this.emit('listed', unserialised.meta.type, unserialised.data)\n                        return\n\n                    case 'create':\n                        this.emit('created', unserialised.meta.type, unserialised.data)\n                        return\n\n                    case 'update':\n                        this.emit('updated', unserialised.meta.type, unserialised.data)\n                        return\n\n                    case 'update_list':\n                        this.emit('listed', unserialised.meta.type, unserialised.data)\n                        return\n\n                    case 'delete':\n                        this.emit('deleted', unserialised.meta.type, unserialised.data)\n                        return\n                }\n\n                console.warn('Unrecognised response.', unserialised.meta)\n            }\n\n            socket.onopen = () => {\n                if (reconnectTimeout !== null) {\n                    clearTimeout(reconnectTimeout)\n                    reconnectTimeout = null\n                }\n\n                if (!connected) {\n                    connected = true\n                    this.emit('connected')\n                }\n            }\n        }\n\n        const reset = () => {\n            if (typeof (reconnectTime) === 'undefined') {\n                reconnectTime = 1000\n            }\n\n            this.create = () => {\n                throw new Error('Database not connected.')\n            }\n\n            this.update = () => {\n                throw new Error('Database not connected.')\n            }\n\n            this.update_list = () => {\n                throw new Error('Database not connected.')\n            }\n\n            this.delete = () => {\n                throw new Error('Database not connected.')\n            }\n\n            this.list = () => {\n                throw new Error('Database not connected.')\n            }\n\n            this.send = () => {\n                throw new Error('Database not connected.')\n            }\n        }\n\n        reset()\n    }\n}\n","/* eslint-disable no-console */\n/* global Promise */\nimport EventEmitter from '../lib/classes/event-emitter'\nimport Database from '../lib/classes/database'\n\nclass CardCreationRequest extends EventEmitter {\n    constructor(column) {\n        super()\n\n        this.accepted = false\n        this.rejected = false\n        this.cancelled = false\n\n        console.debug('Requesting to add a card in', column.name)\n\n        const timer = setTimeout(\n            () => {\n                this.cancel()\n            },\n            10000\n        )\n\n        this.on('accepted', () => { clearTimeout(timer) })\n        this.on('rejected', () => { clearTimeout(timer) })\n    }\n\n    accept(info) {\n        if (!this.accepted && !this.rejected && !this.cancelled) {\n            this.accepted = true\n            this.emit('accepted', info)\n        } else {\n            throw new Error('Request is in an invalid state.')\n        }\n    }\n\n    reject() {\n        if (!this.accepted && !this.rejected && !this.cancelled) {\n            this.rejected = true\n            this.emit('rejected')\n        } else {\n            throw new Error('Request is in an invalid state.')\n        }\n    }\n\n    cancel() {\n        if (!this.accepted && !this.rejected && !this.cancelled) {\n            this.cancelled = true\n            this.emit('cancelled')\n        } else {\n            throw new Error('Request is in an invalid state.')\n        }\n    }\n}\n\nclass CardBase extends EventEmitter {\n    constructor() {\n        super()\n\n        this.actions = {}\n        this.attach = (dom) => {\n            const container = window.$('<div>').addClass(\n                'kanban-card card mb-3'\n            )\n\n            const body = window.$('<div>').addClass('card-body')\n\n            container.append(body)\n            dom.append(container)\n            this.populate(body)\n\n            if (Object.keys(this.actions).length) {\n                const footer = window.$('<div>').addClass(\n                    'card-footer text-right'\n                )\n\n                Object.keys(this.actions).forEach(\n                    (key) => {\n                        const action = this.actions[key]\n                        const a = window.$('<a>').attr('href', 'javascript:;')\n                        const icon = window.$('<i>').addClass(\n                            `fa fa-${action.icon || key}`\n                        )\n\n                        a.on('click',\n                            (e) => {\n                                e.preventDefault()\n                                action.perform().then(\n                                    (result) => {\n                                        console.debug('Performed', key, result)\n                                    }\n                                ).catch(\n                                    (err) => {\n                                        console.warn('Error performing', key, err)\n                                    }\n                                )\n                            }\n                        )\n\n                        a.addClass('text-muted')\n                        a.append(icon)\n                        footer.append(a)\n                    }\n                )\n\n                container.append(footer)\n            }\n\n            this.detatch = () => {\n                container.remove()\n\n                this.detatch = () => {\n                    throw new Error('Card has not been attached to a DOM element.')\n                }\n\n                this.freeze = () => {\n                    throw new Error('Card has not been attached to a DOM element.')\n                }\n\n                this.unfreeze = () => {\n                    throw new Error('Card has not been attached to a DOM element.')\n                }\n\n                this.emit('detatched')\n            }\n\n            this.freeze = () => {\n                container.addClass('kanban-frozen')\n            }\n\n            this.unfreeze = () => {\n                container.removeClass('kanban-frozen')\n            }\n\n            return container\n        }\n\n        this.populate = () => {\n\n        }\n\n        this.cancel = () => {\n            this.emit('cancelled')\n        }\n\n        this.submit = (value) => {\n            this.emit('submitted', value)\n        }\n\n        this.detatch = () => {\n            throw new Error('Card has not been attached to a DOM element.')\n        }\n\n        this.freeze = () => {\n            throw new Error('Card has not been attached to a DOM element.')\n        }\n\n        this.unfreeze = () => {\n            throw new Error('Card has not been attached to a DOM element.')\n        }\n    }\n}\n\nclass TemporaryCard extends CardBase {\n    constructor(settings) {\n        super(settings)\n\n        this.populate = (body) => {\n            const input = window.$('<input>').attr(\n                'type', 'text'\n            ).addClass(\n                'form-control'\n            )\n\n            if (settings.placeholder) {\n                input.attr('placeholder', settings.placeholder)\n            }\n\n            input.on('keyup',\n                (e) => {\n                    switch (e.keyCode) {\n                        case 27:\n                            this.cancel()\n                            break\n\n                        case 13:\n                            e.preventDefault()\n                            this.submit(input.val())\n                            break\n                    }\n                }\n            )\n\n            body.append(input)\n            input.focus()\n        }\n    }\n}\n\nexport class Card extends CardBase {\n    constructor(settings) {\n        super(settings)\n        this.id = settings.id\n        this.ordering = settings.ordering\n\n        this.actions = {\n            delete: {\n                icon: 'trash',\n                title: 'Delete card',\n                perform: () => new Promise(\n                    (resolve, reject) => {\n                        if (confirm('Are you sure?')) {\n                            this.destroy().then(\n                                () => {\n                                    resolve(true)\n                                }\n                            ).catch(\n                                (err) => {\n                                    reject(err)\n                                }\n                            )\n                        } else {\n                            resolve(false)\n                        }\n                    }\n                )\n            }\n        }\n\n        this.populate = (body) => {\n            const title = window.$('<a>').attr(\n                'href', settings.url\n            ).text(\n                settings.name\n            )\n\n            body.append(title)\n        }\n\n        this.destroy = () => new Promise(\n            (resolve) => {\n                this.emit('destroy', resolve)\n            }\n        )\n\n        this.move = (from, to) => {\n            this.freeze()\n            this.emit('send', from, to)\n        }\n\n        this.update = (newSettings) => {\n            settings = newSettings\n            this.ordering = newSettings.ordering\n            this.name = newSettings.name\n        }\n    }\n}\n\nexport class Column extends EventEmitter {\n    constructor(dom, settings) {\n        super()\n\n        this.id = settings.id\n        this.name = settings.name\n        this.on('attached',\n            () => {\n                dom.trigger('kanban.attached')\n            }\n        )\n\n        this.on('cards.create.request',\n            () => {\n                dom.trigger('kanban.cards.create.request')\n            }\n        )\n\n        const heading = window.$('<h6>').text(settings.name)\n        const container = window.$('<div>').addClass('kanban-list-container')\n        const footer = window.$('<div>').addClass('kanban-list-footer')\n\n        if (settings.can_create_cards) {\n            const addBtn = window.$('<button>').addClass(\n                'btn btn-outline-primary btn-block mb-3'\n            ).text(\n                'Add card'\n            )\n\n            addBtn.on('click',\n                (e) => {\n                    e.preventDefault()\n\n                    if (addBtn.attr('disabled')) {\n                        return\n                    }\n\n                    if (settings.can_create_cards) {\n                        const request = new CardCreationRequest(this)\n\n                        request.on('accepted',\n                            (subsettings) => {\n                                const card = new TemporaryCard(subsettings)\n\n                                card.on('submitted',\n                                    (value) => {\n                                        card.detatch()\n                                        this.emit('cards.create.submit',\n                                            {\n                                                name: value\n                                            }\n                                        )\n                                    }\n                                ).on('cancelled',\n                                    () => {\n                                        card.detatch()\n                                    }\n                                ).on('detatched',\n                                    () => {\n                                        addBtn.removeAttr('disabled')\n                                    }\n                                )\n\n                                card.attach(container)\n                            }\n                        ).on('rejected',\n                            (reason) => {\n                                console.warn('Request rejected.', reason)\n                                addBtn.removeAttr('disabled')\n                            }\n                        ).on('cancelled',\n                            () => {\n                                console.warn('Request was not fulfilled in time.')\n                                addBtn.removeAttr('disabled')\n                            }\n                        )\n\n                        addBtn.attr('disabled', 'disabled')\n                        this.emit('cards.create.request', request)\n                    }\n                }\n            )\n\n            footer.append(addBtn)\n        }\n\n        dom.append(heading)\n        dom.append(container)\n        dom.append(footer)\n\n        this.canSend = () => {\n            return settings.can_move_out\n        }\n\n        this.canReceive = () => {\n            return settings.can_move_in\n        }\n\n        this.addCard = (card) => {\n            const subdom = card.attach(container)\n\n            subdom.data('kanban-card', card)\n        }\n\n        this.reorder = (order) => {\n            this.emit('cards.reorder', order)\n        }\n\n        this.redraw = () => {\n            let orderings = {}\n            let cardsByOrdering = {}\n\n            container.find('.kanban-card').each(\n                function() {\n                    const subdom = window.$(this)\n                    const card = subdom.data('kanban-card')\n\n                    orderings[card.ordering] = subdom\n                    cardsByOrdering[card.ordering] = card\n                    subdom.remove()\n                }\n            )\n\n            const keys = Object.keys(orderings)\n\n            keys.sort()\n            keys.forEach(\n                (ordering) => {\n                    const subdom = orderings[ordering]\n                    const card = cardsByOrdering[ordering]\n\n                    subdom.data('kanban-card', card)\n                    container.append(subdom)\n                    card.unfreeze()\n                }\n            )\n        }\n    }\n}\n\nexport class Board extends EventEmitter {\n    constructor(dom, id) {\n        super()\n\n        const columns = window.$('<div>').addClass(\n            'kanban-column-row'\n        )\n\n        let columnsByID = {}\n        let cardsByID = {}\n\n        this.on('freeze',\n            () => {\n                console.debug('Board frozen.')\n                dom.find('a[href], button').each(\n                    function() {\n                        const subdom = window.$(this)\n\n                        if (subdom.data('frozen')) {\n                            return\n                        }\n\n                        if (subdom.attr('disabled')) {\n                            return\n                        }\n\n                        subdom.attr('disabled', 'disabled')\n                        subdom.data('frozen', true)\n                    }\n                )\n\n                dom.addClass('kanban-frozen')\n            }\n        ).on('unfreeze',\n            () => {\n                console.debug('Board unfrozen.')\n                dom.find('a[href], button').each(\n                    function() {\n                        const subdom = window.$(this)\n\n                        if (!subdom.data('frozen')) {\n                            return\n                        }\n\n                        subdom.removeAttr('disabled')\n                        subdom.data('frozen', false)\n                    }\n                )\n\n                dom.removeClass('kanban-frozen')\n            }\n        )\n\n        dom.append(columns)\n        this.emit('freeze')\n\n        const loadColumns = (data) => {\n            console.debug(data)\n            columns.html('').css(\n                {\n                    width: 0\n                }\n            )\n\n            data.forEach(\n                (settings) => {\n                    const subdom = window.$('<div>').addClass('kanban-column')\n                    const column = new Column(\n                        subdom,\n                        window.$.extend(\n                            {\n                                id: settings.id\n                            },\n                            settings.attributes\n                        )\n                    )\n\n                    column.on('cards.create.request',\n                        (request) => {\n                            this.emit('cards.create.request', request, column)\n                        }\n                    ).on('cards.create.submit',\n                        (data) => {\n                            db.create(\n                                {\n                                    type: 'cards',\n                                    attributes: window.$.extend(\n                                        {\n                                            column: settings.id\n                                        },\n                                        data\n                                    )\n                                }\n                            )\n                        }\n                    ).on('cards.reorder',\n                        (ids) => {\n                            let reorderings = []\n\n                            ids.forEach(\n                                (id, ordering) => {\n                                    reorderings.push(\n                                        {\n                                            type: 'cards',\n                                            id: id,\n                                            attributes: {\n                                                ordering: ordering\n                                            }\n                                        }\n                                    )\n                                }\n                            )\n\n                            db.update_list('cards', reorderings)\n                        }\n                    )\n\n                    columnsByID[settings.id] = column\n                    settings.cards.forEach(createCard)\n\n                    subdom.data('kanban-column', column)\n                    columns.append(subdom)\n                    column.emit('attached')\n\n                    const width = subdom.outerWidth(true)\n                    columns.width(\n                        columns.width() + width + 15\n                    )\n                }\n            )\n\n            columns.find('.kanban-column').on('drop',\n                function(e, ui) {\n                    const card = ui.draggable.data('kanban-card')\n                    const sender = ui.draggable.closest('.kanban-column')\n                    const from = sender.data('kanban-column')\n                    const receiver = window.$(this)\n                    const to = receiver.data('kanban-column')\n\n                    if (card === null || typeof (card) === 'undefined') {\n                        console.warning('Lost the card object.')\n                        return false\n                    }\n\n                    if (!from.canSend(card)) {\n                        receiver.removeClass(\n                            'kanban-can-receive'\n                        ).removeClass(\n                            'kanban-cannot-receive'\n                        )\n\n                        return false\n                    }\n\n                    if (!to.canReceive(card)) {\n                        receiver.removeClass(\n                            'kanban-can-receive'\n                        ).removeClass(\n                            'kanban-cannot-receive'\n                        )\n\n                        return false\n                    }\n\n                    receiver.removeClass(\n                        'kanban-can-receive'\n                    ).removeClass(\n                        'kanban-cannot-receive'\n                    )\n\n                    card.move(from, to)\n                }\n            ).on('dropover',\n                function(e, ui) {\n                    const draggable = ui.draggable\n                    const card = draggable.data('kanban-card')\n                    const sender = draggable.closest('.kanban-column')\n                    const from = sender.data('kanban-column')\n                    const receiver = window.$(this)\n                    const to = receiver.data('kanban-column')\n\n                    if (sender.is(receiver)) {\n                        return false\n                    }\n\n                    if (!from.canSend(card)) {\n                        receiver.removeClass(\n                            'kanban-can-receive'\n                        ).addClass(\n                            'kanban-cannot-receive'\n                        )\n\n                        return false\n                    }\n\n                    if (!to.canReceive(card)) {\n                        receiver.removeClass(\n                            'kanban-can-receive'\n                        ).addClass(\n                            'kanban-cannot-receive'\n                        )\n\n                        return false\n                    }\n\n                    receiver.addClass(\n                        'kanban-can-receive'\n                    ).removeClass(\n                        'kanban-cannot-receive'\n                    )\n                }\n            ).on('dropout',\n                function() {\n                    const receiver = window.$(this)\n\n                    receiver.removeClass(\n                        'kanban-can-receive'\n                    ).removeClass(\n                        'kanban-cannot-receive'\n                    )\n                }\n            ).droppable()\n\n            columns.find('.kanban-list-container').on('sortstart',\n                function(e, ui) {\n                    ui.placeholder.height(ui.item.height())\n                }\n            ).on('sortupdate',\n                function() {\n                    const column = window.$(this).closest('.kanban-column').data('kanban-column')\n                    let orderings = []\n\n                    window.$(this).find('.kanban-card').each(\n                        function() {\n                            const card = window.$(this).data('kanban-card')\n\n                            card.freeze()\n                            orderings.push(card.id)\n                        }\n                    )\n\n                    column.reorder(orderings)\n                }\n            ).sortable(\n                {\n                    placeholder: 'ui-sortable-placeholder mb-3'\n                }\n            )\n\n            this.emit('unfreeze')\n        }\n\n        const createCard = (settings) => {\n            const columnID = settings.attributes.column\n            const column = columnsByID[columnID]\n\n            if (column) {\n                const attrs = window.$.extend(\n                    {\n                        id: settings.id,\n                        url: settings.links.detail\n                    },\n                    settings.attributes\n                )\n\n                const card = new Card(attrs)\n\n                card.on('send',\n                    (sender, receiver) => {\n                        card.freeze()\n                        db.update(\n                            {\n                                type: 'cards',\n                                id: card.id,\n                                attributes: {\n                                    column: receiver.id\n                                }\n                            }\n                        )\n                    }\n                ).on('destroy',\n                    (callback) => {\n                        console.debug('Destroying card.', settings.id)\n                        db.delete(\n                            {\n                                type: 'cards',\n                                id: settings.id\n                            }\n                        )\n\n                        callback()\n                    }\n                )\n\n                column.addCard(card)\n                cardsByID[settings.id] = card\n            } else {\n                console.warn('Could not add card to column', columnID)\n            }\n        }\n\n        const updateCard = (settings) => {\n            const card = cardsByID[settings.id]\n\n            if (typeof (card) !== 'undefined') {\n                const column = columnsByID[settings.attributes.column]\n\n                card.update(settings.attributes)\n                card.detatch()\n\n                if (typeof (column) !== 'undefined') {\n                    column.addCard(card)\n                }\n            }\n        }\n\n        const updateCards = (data) => {\n            let updatedColumns = {}\n\n            data.forEach(\n                (datum) => {\n                    const card = cardsByID[datum.id]\n\n                    card.update(datum.attributes)\n                    if (typeof (card) !== 'undefined') {\n                        const columnID = datum.attributes.column\n                        const column = columnsByID[columnID]\n\n                        if (typeof (column) !== 'undefined') {\n                            updatedColumns[columnID] = column\n                        } else {\n                            console.warn(`Can't find column ${columnID}`)\n                        }\n                    }\n                }\n            )\n\n            Object.values(updatedColumns).forEach(\n                (column) => {\n                    column.redraw()\n                }\n            )\n        }\n\n        const deleteCard = (id) => {\n            const card = cardsByID[id]\n\n            if (card) {\n                card.detatch()\n            } else {\n                console.warn(`Could not find card with ID ${id}.`)\n            }\n        }\n\n        const db = new Database(\n            `ws://${window.location.host}/ws/kanban/${id}/`\n        )\n\n        let disconnected = false\n\n        db.on('connected',\n            () => {\n                console.debug('Opened a socket to the Kanban board.')\n\n                db.list(\n                    {\n                        type: 'columns'\n                    }\n                )\n\n                if (disconnected) {\n                    disconnected = false\n                }\n            }\n        ).on('disconnected',\n            () => {\n                console.warn('Kanban board socket closed unexpectedly.')\n                this.emit('error')\n                this.emit('freeze')\n                disconnected = true\n            }\n        ).on('listed',\n            (type, data) => {\n                switch (type) {\n                    case 'columns':\n                        loadColumns(data)\n                        return\n\n                    case 'cards':\n                        updateCards(data)\n                        return\n                }\n\n                console.warn('Unrecognised content type.', type)\n            }\n        ).on('created',\n            (type, data) => {\n                switch (type) {\n                    case 'cards':\n                        createCard(data)\n                        return\n                }\n\n                console.warn('Unrecognised content type.', type)\n            }\n        ).on('updated',\n            (type, data) => {\n                switch (type) {\n                    case 'cards':\n                        updateCard(data)\n                        return\n                }\n\n                console.warn('Unrecognised content type.', type)\n            }\n        ).on('deleted',\n            (type, data) => {\n                switch (type) {\n                    case 'cards':\n                        deleteCard(data.id)\n                        return\n                }\n\n                console.warn('Unrecognised content type.', type)\n            }\n        )\n\n        db.connect()\n    }\n}\n","import ViewBase from '../../lib/classes/view'\nimport { Board } from '../../plugins/kanban'\n\nexport default class BoardDetailView extends ViewBase {\n    classNames() {\n        return ['projects', 'board-detail']\n    }\n\n    ready() {\n        const $ = this.app.$\n\n        $('.kanban-board[data-id]').each(\n            function() {\n                const dom = $(this)\n                const board = new Board(dom, dom.data('id'))\n\n                board.on('cards.create.request',\n                    (request) => {\n                        request.accept(\n                            {\n                                placeholder: 'Episode title'\n                            }\n                        )\n                    }\n                )\n\n                dom.removeAttr('data-id')\n                dom.data('kanban-board', board)\n            }\n        )\n    }\n}\n","import App from './lib/classes/app'\nimport WizardPlugin from './plugins/wizard'\nimport DropzonePlugin from './plugins/dropzone'\nimport TypeaheadPlugin from './plugins/typeahead'\n\nimport CreateProjectView from './views/projects/create'\nimport BoardDetailView from './views/projects/board'\n\nwindow.Pico = new App(\n    {\n        plugins: [\n            WizardPlugin,\n            DropzonePlugin,\n            TypeaheadPlugin\n        ],\n        views: [\n            CreateProjectView,\n            BoardDetailView\n        ]\n    }\n)\n"]}